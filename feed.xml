<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://rhermary.github.io/</id><title>Romain Hermary</title><subtitle>Engineer in Computer Sciences and PhD student at Luxembourg University, my specialisations are in computer vision, deep learning and anomaly detection.</subtitle> <updated>2025-01-08T19:22:46+01:00</updated> <author> <name>Romain Hermary</name> <uri>https://rhermary.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://rhermary.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://rhermary.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator> <rights> Â© 2025 Romain Hermary </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Detection of Venation Intersections in Bee Wings</title><link href="https://rhermary.github.io/posts/imed/" rel="alternate" type="text/html" title="Detection of Venation Intersections in Bee Wings" /><published>2021-08-15T00:00:00+02:00</published> <updated>2025-01-08T19:19:51+01:00</updated> <id>https://rhermary.github.io/posts/imed/</id> <content type="text/html" src="https://rhermary.github.io/posts/imed/" /> <author> <name>Romain Hermary</name> </author> <category term="School Projects" /> <category term="Image Processing" /> <summary>Image processing, Image Detection Project The goal of this project was to find an algorithms pipeline that would get the venation intersection detected. Microscopic images and some ground truth were given, but purposely not enough not for deep learning to be used. Here are a sample of given pictures with their ground truth Chosen Solution Sato filter to highlight the venation Enh...</summary> </entry> <entry><title>Coding a Ray Tracer</title><link href="https://rhermary.github.io/posts/isim/" rel="alternate" type="text/html" title="Coding a Ray Tracer" /><published>2021-05-04T00:00:00+02:00</published> <updated>2025-01-08T19:17:50+01:00</updated> <id>https://rhermary.github.io/posts/isim/</id> <content type="text/html" src="https://rhermary.github.io/posts/isim/" /> <author> <name>Romain Hermary</name> </author> <category term="School Projects" /> <category term="Image Processing" /> <summary>Ray Tracer, Ray Tracing, Image Modeling, Phong Model, Image Rendering Subject For this course project, the goal was to do something with a personal implementation of a ray tracer. My base implementation was able to render objects in space like those spheres: Project I decided to implement the support of height maps, by creating them randomly with a diamond-square algorithm and discretiz...</summary> </entry> <entry><title>Classifying Pixels of Hyperspectral Images</title><link href="https://rhermary.github.io/posts/iml/" rel="alternate" type="text/html" title="Classifying Pixels of Hyperspectral Images" /><published>2021-05-04T00:00:00+02:00</published> <updated>2025-01-08T19:14:46+01:00</updated> <id>https://rhermary.github.io/posts/iml/</id> <content type="text/html" src="https://rhermary.github.io/posts/iml/" /> <author> <name>Romain Hermary</name> </author> <category term="School Projects" /> <category term="Image Processing" /> <summary>Hyperspectral Image, Classification, Machine Learning Subject For this project, we had to propose an image processing pipeline to classify pixels in hyperspectral images of crops. Two images and their ground truth were given: Those images have 200 and 204 spectral bands, respectively. Visualizing hyperspectral images in RGB is not complicated, the only manipulaiton needed is to select...</summary> </entry> <entry><title>Barcode Detection on GPU</title><link href="https://rhermary.github.io/posts/gpgpu/" rel="alternate" type="text/html" title="Barcode Detection on GPU" /><published>2021-04-12T00:00:00+02:00</published> <updated>2025-01-08T19:09:58+01:00</updated> <id>https://rhermary.github.io/posts/gpgpu/</id> <content type="text/html" src="https://rhermary.github.io/posts/gpgpu/" /> <author> <name>Romain Hermary</name> </author> <category term="School Projects" /> <category term="Image Processing" /> <summary>CUDA, GPU Programming, Detection, Image Processing Project Implementing Local Binary Patterns Hitograms algorithm on GPU, then get the resulting images in a KMeans to extract a class containing all pixels related to the barcode. Various images were given, bellow an example of input image: LBP The LBP is a simple yet very efficient texture operator which labels the pixels of an image by ...</summary> </entry> </feed>
